services:
  - type: web
    name: chemfetch-backend
    env: node
    buildCommand: npm install && npm run build 
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      # Supabase credentials - ADD THESE MANUALLY IN RENDER DASHBOARD
      # - key: SB_URL
      #   value: [ADD_IN_DASHBOARD]
      # - key: SB_SERVICE_KEY
      #   value: [ADD_IN_DASHBOARD]
      # Google Search API credentials - ADD THESE MANUALLY IN RENDER DASHBOARD
      # - key: GOOGLE_SEARCH_API_KEY
      #   value: [ADD_IN_DASHBOARD]
      # - key: GOOGLE_SEARCH_ENGINE_ID
      #   value: [ADD_IN_DASHBOARD]
      # Frontend URLs for CORS
      - key: FRONTEND_URL
        value: https://chemfetch.com,https://chemfetch-client-hub-live.vercel.app
      # OCR service URL (internal communication between services) - FIXED
      - key: EXPO_PUBLIC_OCR_API_URL
        fromService:
          name: chemfetch-ocr-lightweight
          type: pserv
          property: host
      # Backup OCR service URL
      - key: OCR_SERVICE_URL
        fromService:
          name: chemfetch-ocr-lightweight
          type: pserv
          property: host
      # Debug logging
      - key: DEBUG_OCR_CONNECTION
        value: '1'

  - type: pserv
    name: chemfetch-ocr-lightweight
    env: python
    # Enhanced build command with better error handling for 512MB limit
    buildCommand: |
      cd ocr_service && 
      echo "ðŸ”§ Installing Python dependencies..." &&
      pip install --upgrade pip &&
      pip install --prefer-binary --no-cache-dir -r requirements.txt &&
      echo "âœ… Dependencies installed successfully" &&
      python -c "import flask; print(f'Flask version: {flask.__version__}')" &&
      python -c "import pdfplumber; print('pdfplumber: OK')" &&
      echo "ðŸš€ Build complete"
    # Use python directly for better control
    startCommand: cd ocr_service && echo "ðŸš€ Starting OCR service..." && python ocr_service.py
    plan: free  # 512MB RAM, 0.5 CPU
    envVars:
      - key: PORT
        value: 5001
      - key: OCR_MODE
        value: text-only
      - key: PYTHONUNBUFFERED
        value: '1'
      - key: DEBUG_IMAGES
        value: '0'
      # Build optimization for 512MB limit
      - key: PIP_NO_CACHE_DIR
        value: '1'
      - key: PIP_PREFER_BINARY
        value: '1'
      - key: PIP_NO_COMPILE
        value: '1'
      # Python memory optimization
      - key: PYTHONDONTWRITEBYTECODE
        value: '1'
